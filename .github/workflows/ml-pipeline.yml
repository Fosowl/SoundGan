name: ML Pipeline

on:
  workflow_dispatch:
    inputs:
      class_name:
        description: "Class to download (e.g., bird, guitar, etc.)"
        required: true
        default: "bird"

env:
  YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  ml-pipeline:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r data/requirements.txt
          pip install -r gan/requirements.txt

      # Step 4: Run the data harvester
      - name: Run Data Harvester
        run: |
          chmod +x data/data_harverser/data_pipeline.sh
          ./data/data_harverser/data_pipeline.sh "${{ inputs.class_name }}"

      # Step 5: Prepare training data
      - name: Move Data
        run: |
          mkdir -p data/images_training
          mkdir -p data/prepared_data/csv
          mkdir -p data/prepared_data/images
          mkdir -p data/prepared_data/sounds
          cp -r data/prepared_data/images/* data/images_training/

      # Step 6: Train the GAN model
      - name: Train GAN
        run: |
          python3 gan.py --training

      # Step 7: Save Training Artifacts
      - name: Upload Model Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: trained-gan-model
          path: gan/save/
